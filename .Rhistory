# First, make company-specific data frames that all have exactly the same columns
# which( colnames(data4)=="condexp" ) to check column indexes
cols1 <- c(2:5, 7, 42:55, 58, 59, 62:64, 72:80, 84, 90, 92:97, 85:88) # Ericsson
cols2 <- c(2:5, 6, 53:66, 81, 82, 84, 83, 85, 97:102, 104, 105, 108, 113, 121, 123:128, 114, 116:118) # F-secure
cols3 <- c(2:5, 7, 56:69, 72, 73, 77, 74, 78, 93:98, 101:103, 110, 118, 120:125, 111, 113:115) # Vaadin
cols4 <- c(2:5, 6, 50:63, 77, 78, 80, 79, 81, 94:99, 102, 104, 101, 107, 115, 117:122, 109:112) # Reaktor
clus_colnames  <- c("SUBTIME", "JOBFUNC", "JOBFUNCOTHER", "JOBTIME", "GENDER", "INVA", "INVB", "INVC", "INVD", "INVE", "INVF", "INVG", "INVH", "INVI", "INVJ", "INVK", "INVL", "INVM", "INVN", "ROLE", "worktime", "age_range","gender", "team_size", "USERA","USERB","USERC","USERD","USERE","USERF", "INF.MNG","INF.UX", "INF.DEV", "INF.SLF", "condexp", "3.3A", "3.3B","3.3C","3.3D","3.3E", "3.3F", "M1", "M2", "M3", "M4")
clus_data1 <- data1[, cols1]
names(clus_data1) <- clus_colnames
clus_data2 <- data2[, cols2]
names(clus_data2) <- clus_colnames
clus_data3 <- data3[, cols3]
names(clus_data3) <- clus_colnames
clus_data4 <- data4[, cols4]
names(clus_data4) <- clus_colnames
# Second, concatenate the company names' column
clus_data <- rbind(clus_data1, clus_data2, clus_data3, clus_data4)
clus_data[1:35,46] <- "Ericsson"
clus_data[36:43,46] <- "F-secure"
clus_data[44:64,46] <- "Vaadin"
clus_data[65:130,46] <- "Reaktor"
names(clus_data)[46] <- "COMPANY"
## DEMOGRAPHICS ##
# 1.1 job functions total and over companies
ggplot(clus_data, aes(x=ROLE)) +
geom_bar(fill="#FF9999", colour="white") +
labs(x="Job functions", y="Frequency") + theme(axis.text=element_text(size=13), axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) + scale_y_continuous(breaks=c(0, 14, 22, 23, 71), labels = c("0", "14", "22", "23", "71"))
ggplot(clus_data, aes(x=ROLE)) +
geom_bar(fill="#FF9999", colour="white") +
labs(x="Job functions", y="Frequency") + theme(axis.text=element_text(size=13), axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
facet_wrap(~clus_data$COMPANY)
# 1.2 worktime total (remove the facet_wrap parameter) and worktime over companies
ggplot(clus_data, aes(x=worktime)) +
geom_histogram(binwidth=12, colour="black", fill="white") +
labs(x="Work time", y="Frequency") + theme(axis.text=element_text(size=13)) +
facet_wrap(~clus_data$ROLE) + scale_x_continuous(breaks=c(1, 12, 24, 36, 48, 60, 72, 96, 108, 120, 132), labels=c("<1y", "1y", "2y","3y", "4y", "5y","6y", "8y", "9y", "10y", ">10y")) + scale_y_continuous(breaks=c(0,1,4,5,6,7,8,9), labels = c("0", "1", "4", "5", "6","7", "8", "9"))
# example: looking into developers whose worktime is less than 1y
# View(clus_data[ which(clus_data$worktime<=12 & clus_data$ROLE == "Developer"), ], )
# one company, example dataset3
ggplot(data3, aes(x=data3$worktime)) +
geom_histogram(binwidth=12, colour="black", fill="white") +
labs(x="Vaadin_Work time", y="Frequency") + theme(axis.text=element_text(size=13)) +
scale_x_continuous(breaks=c(1, 12, 24, 36, 48, 60, 72, 96, 108, 120, 132), labels=c("<1y", "1y", "2y","3y", "4y", "5y","6y", "8y", "9y", "10y", ">10y")) + scale_y_continuous(breaks=c(0,1,4,5,6,7,8,9), labels = c("0", "1", "4", "5", "6","7", "8", "9"))
# 1.3 age range over companies
ggplot(clus_data, aes(x=age_range)) +
geom_bar(fill="#FF9999", colour="white") +
labs(x="Age range", y="Frequency") + theme(axis.text=element_text(size=13), axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
facet_wrap(~clus_data$ROLE)
# one company
ggplot(data2, aes(x=data2$age_range)) +
geom_bar(fill="#FF9999", colour="white") +
labs(x="Age range", y="Frequency") + theme(axis.text=element_text(size=13), axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
# 1.4 gender over companies/roles
ggplot(clus_data, aes(x=gender)) +
geom_bar(fill="#FF9999", colour="white") +
labs(x="Gender", y="Frequency") + theme(axis.text=element_text(size=13), axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
facet_wrap(~clus_data$ROLE)
# one company, example data2
ggplot(data2, aes(x=data2$gender)) +
geom_bar(fill="#FF9999", colour="white") +
labs(x="Gender", y="Frequency") + theme(axis.text=element_text(size=13), axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
# 1.5 team size
ggplot(clus_data, aes(x=team_size)) +
geom_bar(fill="#FF9999", colour="white") +
labs(x="Team size", y="Frequency") + theme(axis.text=element_text(size=13), axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
facet_wrap(~clus_data$ROLE) + scale_y_continuous(breaks=c(0,3,6,9,12,20,25), labels=c("0", "3","6", "9","3y","5y", "10y"))
# one company example data3
ggplot(data3, aes(x=data3$teamsize)) +
geom_bar(fill="#FF9999", colour="white") +
labs(x="Vaadin_Team size", y="Frequency") + theme(axis.text=element_text(size=13))
## END OF DEMOGRAPHICS ##
# 2.1
# one data frame for the merged statements
useractivities = cbind(useractivities1[1], useractivities1[-1] + useractivities2[-1] + useractivities3[-1] + useractivities4[-1])
summary(useractivities)
ggplot(useractivities, aes(x=Activity, y=Frequency)) +
geom_bar(stat="identity", fill="#FF9999", colour="#FF9999") +
labs(x="Total Activities", y="Frequency") + theme(axis.text=element_text(size=13))
# one company
ggplot(useractivities2, aes(x=Activity, y=Frequency)) +
geom_bar(stat="identity", fill="#FF9999", colour="#FF9999") +
labs(x="F_secure_Total Activities", y="Frequency") + theme(axis.text=element_text(size=13))
# 2.2
userinv <- rbind(userinv1, userinv2, userinv3, userinv4)
ggplot(userinv, aes(x=Statement, y=Rating, fill=Statement)) + geom_boxplot() + guides(fill=FALSE) + coord_flip() +
labs(x="Total involvement statements", y="Frequency") + theme(axis.text=element_text(size=13)) +
facet_wrap(~userinv$Jobf)
data.frame(userinv)
# Example counting on specific statements:
# count(userinv[ which(userinv$Statement=='The information I have about users is up to date'), ], "Rating")
# to mask the company names
jb_names = c("Ericsson"="Company A", "F-secure"="Company B","Vaadin"="Company C", "Reaktor"="Company D")
# facet_wraping over companies
ggplot(userinv, aes(x=Statement, y=Rating, fill=Statement)) + geom_boxplot(fill="white", colour="black") + guides(fill=FALSE) + coord_flip() +
labs(x="Total involvement statements", y="Frequency") + theme(axis.text=element_text(size=9)) +
facet_wrap(~userinv$Comp, ncol = 4, labeller = as_labeller(jb_names)) +
theme(axis.title.x=element_blank(),
#axis.text.y=element_blank(),
#axis.ticks.x=element_blank(),
axis.title.y=element_blank())
# facet_wraping over roles
ggplot(subset(userinv, Jobf %in% c("Developer", "Manager", "UX designer")), aes(x=Statement, y=Rating, fill=Statement)) + geom_boxplot(fill="white", colour="black") + guides(fill=FALSE) + coord_flip() +
labs(x="Total involvement statements", y="Frequency") + theme(axis.text=element_text(size=9)) +
facet_wrap(~Jobf, ncol = 3) +
theme(axis.title.x=element_blank(),
#axis.text.y=element_blank(),
#axis.ticks.x=element_blank(),
axis.title.y=element_blank())
# 2.3
userinf <- rbind(userinf1, userinf2, userinf3, userinf4)
ggplot(userinf, aes(x=Statement, y=Rating, fill=Statement)) + geom_boxplot() + guides(fill=FALSE) + coord_flip() +
labs(x="Who is closest to user info?", y="Frequency") + theme(axis.text=element_text(size=13))+
facet_wrap(~userinf$Jobf+Comp)
# 2.4
infofreq <- rbind(infofreq1, infofreq2, infofreq3, infofreq4)
ggplot(infofreq, aes(x=Statement, y=Rating, fill=Statement)) + geom_boxplot() + guides(fill=FALSE) + coord_flip() +
labs(x="Total_Methods used", y="Frequency") + theme(axis.text=element_text(size=7)) +
facet_wrap(~userinf$Jobf)
# 2.4 with ROLES dropped the other group and violin plot trials
ggplot(subset(infofreq1, Jobf %in% c("Developer", "Manager", "UX designer")), aes(x=Statement, y=Rating, fill=Statement)) + geom_violin(fill="white", colour="black") + guides(fill=FALSE) + coord_flip() +
theme(axis.text=element_text(size=8)) + labs(x="Total_User understanding", y="Frequency") +
facet_wrap(~Jobf) +
geom_jitter(shape=16, position=position_jitter(0.1)) +
theme(axis.title.x=element_blank(),
#axis.text.y=element_blank(),
#axis.ticks.x=element_blank(),
axis.title.y=element_blank())
# 3.1
ggplot(clus_data, aes(x=condexp)) +
geom_bar(fill="#FF9999", colour="white") +
labs(x="Total_Conducting experiments", y="Frequency") + theme(axis.text=element_text(size=13), axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
facet_wrap(~clus_data$ROLE, ncol=4)
# 3.3
understanding <- rbind(understanding1, understanding2, understanding3, understanding4)
ggplot(understanding, aes(x=Statement, y=Rating, fill=Statement)) + geom_boxplot(fill="white", colour="black") + guides(fill=FALSE) + coord_flip() +
theme(axis.text=element_text(size=9)) + labs(x="Total_User understanding", y="Frequency") +
facet_wrap(~understanding$Jobf, ncol = 4, labeller = as_labeller(jb_names)) +
theme(axis.title.x=element_blank(),
#axis.text.y=element_blank(),
#axis.ticks.x=element_blank(),
axis.title.y=element_blank())
understanding <- rbind(understanding1, understanding2, understanding3, understanding4)
ggplot(understanding, aes(x=Statement, y=Rating, fill=Statement)) + geom_boxplot(fill="white", colour="black") + guides(fill=FALSE) + coord_flip() +
theme(axis.text=element_text(size=9)) + labs(x="Total_User understanding", y="Frequency") +
#facet_wrap(~understanding$Jobf, ncol = 4, labeller = as_labeller(jb_names)) +
theme(axis.title.x=element_blank(),
#axis.text.y=element_blank(),
#axis.ticks.x=element_blank(),
axis.title.y=element_blank())
understanding <- rbind(understanding1, understanding2, understanding3, understanding4)
ggplot(understanding, aes(x=Statement, y=Rating, fill=Statement)) + geom_boxplot(fill="white", colour="black") + guides(fill=FALSE) + coord_flip() +
theme(axis.text=element_text(size=11)) + labs(x="Total_User understanding", y="Frequency") +
#facet_wrap(~understanding$Jobf, ncol = 4, labeller = as_labeller(jb_names)) +
theme(axis.title.x=element_blank(),
#axis.text.y=element_blank(),
#axis.ticks.x=element_blank(),
axis.title.y=element_blank())
ggplot(understanding, aes(x=Statement, y=Rating, fill=Statement)) + geom_boxplot(fill="white", colour="black") + guides(fill=FALSE) + coord_flip() +
theme(axis.text=element_text(size=11)) + labs(x="Total_User understanding", y="Frequency") + scale_y_continuous(trans = "reverse", breaks = unique(understanding$Statement)) +
#facet_wrap(~understanding$Jobf, ncol = 4, labeller = as_labeller(jb_names)) +
theme(axis.title.x=element_blank(),
#axis.text.y=element_blank(),
#axis.ticks.x=element_blank(),
axis.title.y=element_blank())
ggplot(understanding, aes(x=Statement, y=Rating, fill=Statement)) + geom_boxplot(fill="white", colour="black") + guides(fill=FALSE) + coord_flip() +
theme(axis.text=element_text(size=11)) + labs(x="Total_User understanding", y="Frequency") + scale_x_continuous(trans = "reverse", breaks = unique(understanding$Statement)) +
#facet_wrap(~understanding$Jobf, ncol = 4, labeller = as_labeller(jb_names)) +
theme(axis.title.x=element_blank(),
#axis.text.y=element_blank(),
#axis.ticks.x=element_blank(),
axis.title.y=element_blank())
ggplot(understanding, aes(x=Statement, y=Rating, fill=Statement)) + geom_boxplot(fill="white", colour="black") + guides(fill=FALSE) + coord_flip() +
theme(axis.text=element_text(size=11)) + labs(x="Total_User understanding", y="Frequency") + scale_y_continuous(trans = "reverse") +
#facet_wrap(~understanding$Jobf, ncol = 4, labeller = as_labeller(jb_names)) +
theme(axis.title.x=element_blank(),
#axis.text.y=element_blank(),
#axis.ticks.x=element_blank(),
axis.title.y=element_blank())
ggplot(understanding, aes(x=Statement, y=Rating, fill=Statement)) + geom_boxplot(fill="white", colour="black") + guides(fill=FALSE) + coord_flip() +
theme(axis.text=element_text(size=11)) + labs(x="Total_User understanding", y="Frequency") + scale_x_continuous(trans = "reverse") +
#facet_wrap(~understanding$Jobf, ncol = 4, labeller = as_labeller(jb_names)) +
theme(axis.title.x=element_blank(),
#axis.text.y=element_blank(),
#axis.ticks.x=element_blank(),
axis.title.y=element_blank())
ggplot(understanding, aes(x=Statement, y=Rating, fill=Statement)) + geom_boxplot(fill="white", colour="black") + guides(fill=FALSE) + coord_flip() +
theme(axis.text=element_text(size=11)) + labs(x="Total_User understanding", y="Frequency") + scale_x_discrete(trans = "reverse") +
#facet_wrap(~understanding$Jobf, ncol = 4, labeller = as_labeller(jb_names)) +
theme(axis.title.x=element_blank(),
#axis.text.y=element_blank(),
#axis.ticks.x=element_blank(),
axis.title.y=element_blank())
ggplot(understanding, aes(x=Statement, y=Rating, fill=Statement)) + geom_boxplot(fill="white", colour="black") + guides(fill=FALSE) + coord_flip() +
theme(axis.text=element_text(size=11)) + labs(x="Total_User understanding", y="Frequency") + scale_x_continuous(trans = "reverse", breaks = unique(understanding$Statement)) +
#facet_wrap(~understanding$Jobf, ncol = 4, labeller = as_labeller(jb_names)) +
theme(axis.title.x=element_blank(),
#axis.text.y=element_blank(),
#axis.ticks.x=element_blank(),
axis.title.y=element_blank())
ggplot(understanding, aes(x=Statement, y=Rating, fill=Statement)) + geom_boxplot(fill="white", colour="black") + guides(fill=FALSE) + coord_flip() +
theme(axis.text=element_text(size=11)) + labs(x="Total_User understanding", y="Frequency") + scale_x_discrete(trans = "reverse", breaks = unique(understanding$Statement)) +
#facet_wrap(~understanding$Jobf, ncol = 4, labeller = as_labeller(jb_names)) +
theme(axis.title.x=element_blank(),
#axis.text.y=element_blank(),
#axis.ticks.x=element_blank(),
axis.title.y=element_blank())
ggplot(understanding, aes(x=Statement, y=Rating, fill=Statement)) + geom_boxplot(fill="white", colour="black") + guides(fill=FALSE) + coord_flip() +
theme(axis.text=element_text(size=11)) + labs(x="Total_User understanding", y="Frequency") +
#facet_wrap(~understanding$Jobf, ncol = 4, labeller = as_labeller(jb_names)) +
theme(axis.title.x=element_blank(),
#axis.text.y=element_blank(),
#axis.ticks.x=element_blank(),
axis.title.y=element_blank())
understanding <- rbind(understanding1, understanding2, understanding3, understanding4)
ggplot(understanding, aes(x=Statement, y=Rating, fill=Statement)) + geom_boxplot(fill="white", colour="black") + guides(fill=FALSE) + coord_flip() +
theme(axis.text=element_text(size=11)) + labs(x="Total_User understanding", y="Frequency") +
+ scale_x_discrete(limits=c("..we need to measure user behaviour to decide what the software should be like","..users themselves must be actively involved in shaping the software", "..focused data on a specific user action or behaviour is useful", "..rich, detailed data about what users do is useful", "..data should only be collected when there is a known need or assumption", "..data should always be collected because it might be needed later" )) +
#facet_wrap(~understanding$Jobf, ncol = 4, labeller = as_labeller(jb_names)) +
theme(axis.title.x=element_blank(),
#axis.text.y=element_blank(),
#axis.ticks.x=element_blank(),
axis.title.y=element_blank())
understanding <- rbind(understanding1, understanding2, understanding3, understanding4)
ggplot(understanding, aes(x=Statement, y=Rating, fill=Statement)) + geom_boxplot(fill="white", colour="black") + guides(fill=FALSE) + coord_flip() +
theme(axis.text=element_text(size=11)) + labs(x="Total_User understanding", y="Frequency") +
scale_x_discrete(limits=c("..we need to measure user behaviour to decide what the software should be like","..users themselves must be actively involved in shaping the software", "..focused data on a specific user action or behaviour is useful", "..rich, detailed data about what users do is useful", "..data should only be collected when there is a known need or assumption", "..data should always be collected because it might be needed later" )) +
#facet_wrap(~understanding$Jobf, ncol = 4, labeller = as_labeller(jb_names)) +
theme(axis.title.x=element_blank(),
#axis.text.y=element_blank(),
#axis.ticks.x=element_blank(),
axis.title.y=element_blank())
userinf <- rbind(userinf1, userinf2, userinf3, userinf4)
ggplot(userinf, aes(x=Statement, y=Rating, fill=Statement)) + geom_boxplot() + guides(fill=FALSE) + coord_flip() +
labs(x="Who is closest to user info?", y="Frequency") + theme(axis.text=element_text(size=13))+
facet_wrap(~userinf$Jobf+Comp)
userinf <- rbind(userinf1, userinf2, userinf3, userinf4)
ggplot(userinf, aes(x=Statement, y=Rating, fill=Statement)) + geom_boxplot() + guides(fill=FALSE) + coord_flip() +
labs(x="Who is closest to user info?", y="Frequency") + theme(axis.text=element_text(size=13))+
facet_wrap(~userinf$Jobf)
getwd()
setwd("/Users/yaman/Desktop/IST/ARL")
data <- read.csv( file = "./clus_data.csv", stringsAsFactors = FALSE )
#write.csv( x = data[,-1], file = "./clus_data_new.csv", row.names = FALSE )
numericColumns <- sapply(data, is.numeric)
summary(as.data.frame(unclass(data)))
#x <- c("INVA", "INVC", "INVD", "INVE", "INVF",  "INVN",  "INVL")
#qColNames <- colnames(data)[ grepl(paste(x, collapse = "|"), colnames(data)) & numericColumns ]
qColNames <- colnames(data)[ grepl("^INF", colnames(data)) & numericColumns ]
colNamesToColIndsRules <- setNames( 1:length(qColNames), qColNames )
qDF <-
melt( data = data, id.vars = c("ROLE") ) %>%
dplyr::filter( variable %in% qColNames ) %>%
dplyr::filter(!is.na(value)) %>%
dplyr::filter(!is.na(ROLE))
#%>%
#dplyr::filter(!is.na(ROLE))
group_means <- qDF %>%
group_by(ROLE, variable) %>%
dplyr::summarise(mean = mean(as.numeric(value)))
#x <- c("INVA", "INVC", "INVD", "INVE", "INVF",  "INVN",  "INVL")
#qColNames <- colnames(data)[ grepl(paste(x, collapse = "|"), colnames(data)) & numericColumns ]
qColNames <- colnames(data)[ grepl("^M", colnames(data)) & numericColumns ]
colNamesToColIndsRules <- setNames( 1:length(qColNames), qColNames )
qDF <-
melt( data = data, id.vars = c("ROLE") ) %>%
dplyr::filter( variable %in% qColNames ) %>%
dplyr::filter(!is.na(value)) %>%
dplyr::filter(!is.na(ROLE))
#%>%
#dplyr::filter(!is.na(ROLE))
group_means <- qDF %>%
group_by(ROLE, variable) %>%
dplyr::summarise(mean = mean(as.numeric(value)))
library(d3heatmap)
library(vcd)
library(GGally)
library(dplyr)
library(reshape2)
library(ggplot2)
library(RColorBrewer)
data <- read.csv( file = "./clus_data.csv", stringsAsFactors = FALSE )
#write.csv( x = data[,-1], file = "./clus_data_new.csv", row.names = FALSE )
numericColumns <- sapply(data, is.numeric)
summary(as.data.frame(unclass(data)))
sum( data$JOBTIME > 200 , na.rm=T)
data$JOBTIME <- ifelse( data$JOBTIME > 200, NA, data$JOBTIME)
qDF <-
melt( data = data, id.vars = c("ROLE") ) %>%
dplyr::filter( variable %in% qColNames ) %>%
dplyr::filter(!is.na(value)) %>%
dplyr::filter(!is.na(ROLE))
group_means <- qDF %>%
group_by(ROLE, variable) %>%
dplyr::summarise(mean = mean(as.numeric(value)))
group_means$variable <- factor(group_means$variable)
ggplot(subset(group_means, ROLE %in% c("Developer", "Manager", "UX designer")), aes(x=as.numeric(variable), y=mean, color=ROLE, linetype=ROLE)) + geom_line(size=1) + scale_linetype_manual(values=c("solid", "twodash", "dotted")) +
theme(axis.text=element_text(size=12)) +
scale_x_continuous(labels=as.character(group_means$variable), breaks=as.numeric(group_means$variable)) +
theme(axis.title.x=element_blank(),
#axis.text.y=element_blank(),
#axis.ticks.x=element_blank(),
axis.title.y=element_blank()) +
scale_y_discrete(limits = c(1, 4)) + scale_y_discrete(limits= c(1, 2, 3, 4)) +
theme(legend.key.size = unit(3,"line"),  legend.text=element_text(size=12))
#x <- c("INVA", "INVC", "INVD", "INVE", "INVF",  "INVN",  "INVL")
#qColNames <- colnames(data)[ grepl(paste(x, collapse = "|"), colnames(data)) & numericColumns ]
qColNames <- colnames(data)[ grepl("^M", colnames(data)) & numericColumns ]
colNamesToColIndsRules <- setNames( 1:length(qColNames), qColNames )
qDF <-
melt( data = data, id.vars = c("ROLE") ) %>%
dplyr::filter( variable %in% qColNames ) %>%
dplyr::filter(!is.na(value)) %>%
dplyr::filter(!is.na(ROLE))
#%>%
#dplyr::filter(!is.na(ROLE))
group_means <- qDF %>%
group_by(ROLE, variable) %>%
dplyr::summarise(mean = mean(as.numeric(value)))
group_means[group_means=="Ericsson"]<-"A"
group_means[group_means=="F-secure"]<-"B"
group_means[group_means=="Vaadin"]<-"C"
group_means[group_means=="Reaktor"]<-"D"
#levels(group_means$variable)
group_means$variable <- factor(group_means$variable)
#Reaktor <- subset(group_means, COMPANY=="A")
#ggplot(subset(Reaktor, ROLE %in% c("Developer", "Manager", "UX designer")),
group_means <- data.frame(group_means)
#subset(group_means, COMPANY %in% c("Developer", "Manager", "UX designer"))
ggplot(subset(group_means, ROLE %in% c("Developer", "Manager", "UX designer")), aes(x=as.numeric(variable), y=mean, color=ROLE, linetype=ROLE)) + geom_line(size=1) +
scale_linetype_manual(values=c("solid", "twodash", "dotted", "longdash")) +
scale_x_continuous(labels=as.character(group_means$variable), breaks=as.numeric(group_means$variable))+
theme(axis.text=element_text(size=12))+
theme(axis.title.x=element_blank(),
#axis.text.y=element_blank(),
#axis.ticks.x=element_blank(),
axis.title.y=element_blank()) +
coord_cartesian(ylim=c(1, 5)) +
theme(legend.key.size = unit(3,"line"),  legend.text=element_text(size=12))
#x <- c("INVA", "INVC", "INVD", "INVE", "INVF",  "INVN",  "INVL")
#qColNames <- colnames(data)[ grepl(paste(x, collapse = "|"), colnames(data)) & numericColumns ]
qColNames <- colnames(data)[ grepl("^INF", colnames(data)) & numericColumns ]
colNamesToColIndsRules <- setNames( 1:length(qColNames), qColNames )
qDF <-
melt( data = data, id.vars = c("ROLE") ) %>%
dplyr::filter( variable %in% qColNames ) %>%
dplyr::filter(!is.na(value)) %>%
dplyr::filter(!is.na(ROLE))
#%>%
#dplyr::filter(!is.na(ROLE))
group_means <- qDF %>%
group_by(ROLE, variable) %>%
dplyr::summarise(mean = mean(as.numeric(value)))
group_means[group_means=="Ericsson"]<-"A"
group_means[group_means=="F-secure"]<-"B"
group_means[group_means=="Vaadin"]<-"C"
group_means[group_means=="Reaktor"]<-"D"
#levels(group_means$variable)
group_means$variable <- factor(group_means$variable)
#Reaktor <- subset(group_means, COMPANY=="A")
#ggplot(subset(Reaktor, ROLE %in% c("Developer", "Manager", "UX designer")),
group_means <- data.frame(group_means)
#subset(group_means, COMPANY %in% c("Developer", "Manager", "UX designer"))
ggplot(subset(group_means, ROLE %in% c("Developer", "Manager", "UX designer")), aes(x=as.numeric(variable), y=mean, color=ROLE, linetype=ROLE)) + geom_line(size=1) +
scale_linetype_manual(values=c("solid", "twodash", "dotted", "longdash")) +
scale_x_continuous(labels=as.character(group_means$variable), breaks=as.numeric(group_means$variable))+
theme(axis.text=element_text(size=12))+
theme(axis.title.x=element_blank(),
#axis.text.y=element_blank(),
#axis.ticks.x=element_blank(),
axis.title.y=element_blank()) +
coord_cartesian(ylim=c(1, 5)) +
theme(legend.key.size = unit(3,"line"),  legend.text=element_text(size=12))
summary(as.data.frame(unclass(data)))
# x <- c("INVA", "INVB", "INVC", "INVD", "INVE",  "INVF",  "INVG")
#"INVH", "INVI", "INVJ", "INVK", "INVL", "INVM", "INVN"
#"INVA", "INVB", "INVC", "INVD", "INVE",  "INVF",  "INVG"
# qColNames <- colnames(data)[ grepl(paste(x, collapse = "|"), colnames(data)) & numericColumns ]
qColNames <- colnames(data)[ grepl("^X3.3", colnames(data)) & numericColumns ]
colNamesToColIndsRules <- setNames( 1:length(qColNames), qColNames )
qDF <-
melt( data = data, id.vars = c("COMPANY") ) %>%
dplyr::filter( variable %in% qColNames ) %>%
dplyr::filter(!is.na(value)) %>%
dplyr::filter(!is.na(COMPANY))
#%>%
#dplyr::filter(!is.na(ROLE))
group_means <- qDF %>%
group_by(COMPANY, variable) %>%
dplyr::summarise(mean = mean(as.numeric(value)))
group_means[group_means=="Ericsson"]<-"A"
group_means[group_means=="F-secure"]<-"B"
group_means[group_means=="Vaadin"]<-"C"
group_means[group_means=="Reaktor"]<-"D"
#levels(group_means$variable)
group_means$variable <- factor(group_means$variable)
#Reaktor <- subset(group_means, COMPANY=="A")
#ggplot(subset(Reaktor, ROLE %in% c("Developer", "Manager", "UX designer")),
group_means <- data.frame(group_means)
#subset(group_means, COMPANY %in% c("Developer", "Manager", "UX designer"))
ggplot(group_means, aes(x=as.numeric(variable), y=mean, color=COMPANY, linetype=COMPANY)) + geom_line(size=1) +
scale_linetype_manual(values=c("solid", "twodash", "dotted", "longdash")) +
scale_x_continuous(labels=as.character(group_means$variable), breaks=as.numeric(group_means$variable))+
theme(axis.text=element_text(size=12))+
theme(axis.title.x=element_blank(),
#axis.text.y=element_blank(),
#axis.ticks.x=element_blank(),
axis.title.y=element_blank())  + coord_cartesian(ylim=c(1, 5)) +
theme(legend.key.size = unit(3,"line"),  legend.text=element_text(size=12))
#x <- c("INVA", "INVC", "INVD", "INVE", "INVF",  "INVN",  "INVL")
#qColNames <- colnames(data)[ grepl(paste(x, collapse = "|"), colnames(data)) & numericColumns ]
qColNames <- colnames(data)[ grepl("^X3.3", colnames(data)) & numericColumns ]
colNamesToColIndsRules <- setNames( 1:length(qColNames), qColNames )
qDF <-
melt( data = data, id.vars = c("ROLE") ) %>%
dplyr::filter( variable %in% qColNames ) %>%
dplyr::filter(!is.na(value)) %>%
dplyr::filter(!is.na(ROLE))
#%>%
#dplyr::filter(!is.na(ROLE))
group_means <- qDF %>%
group_by(ROLE, variable) %>%
dplyr::summarise(mean = mean(as.numeric(value)))
group_means[group_means=="Ericsson"]<-"A"
group_means[group_means=="F-secure"]<-"B"
group_means[group_means=="Vaadin"]<-"C"
group_means[group_means=="Reaktor"]<-"D"
#levels(group_means$variable)
group_means$variable <- factor(group_means$variable)
#Reaktor <- subset(group_means, COMPANY=="A")
#ggplot(subset(Reaktor, ROLE %in% c("Developer", "Manager", "UX designer")),
group_means <- data.frame(group_means)
#subset(group_means, COMPANY %in% c("Developer", "Manager", "UX designer"))
ggplot(subset(group_means, ROLE %in% c("Developer", "Manager", "UX designer")), aes(x=as.numeric(variable), y=mean, color=ROLE, linetype=ROLE)) + geom_line(size=1) +
scale_linetype_manual(values=c("solid", "twodash", "dotted", "longdash")) +
scale_x_continuous(labels=as.character(group_means$variable), breaks=as.numeric(group_means$variable))+
theme(axis.text=element_text(size=12))+
theme(axis.title.x=element_blank(),
#axis.text.y=element_blank(),
#axis.ticks.x=element_blank(),
axis.title.y=element_blank()) +
coord_cartesian(ylim=c(1, 5)) +
theme(legend.key.size = unit(3,"line"),  legend.text=element_text(size=12))
data1 <- data
data1 <- data.frame(data1)
data1[data1=="Ericsson"]<-"Company A"
data1[data1=="F-secure"]<-"Company B"
data1[data1=="Vaadin"]<-"Company C"
data1[data1=="Reaktor"]<-"Company D"
# data2 <- subset(data1, condexp %in% c("Never", "Rarely", "Occasionally", "Yes, actively"))
data1$condexp = factor(data1$condexp, levels=c("Never", "Rarely", "Occasionally", "Yes, actively"))
mosaic( condexp ~ ROLE, data = data1, rot_labels=c(33,0,0,0), highlighting_fill = subs_pal[3:6], labeling_args = list(set_varnames = c(condexp=" ", COMPANY=""), just_labels = c("left",
"center",
"center",
"right"), offset_labels = c(-0.72, 0, 0, 0))
)
data1 <- data
data1 <- data.frame(data1)
data1[data1=="Ericsson"]<-"Company A"
data1[data1=="F-secure"]<-"Company B"
data1[data1=="Vaadin"]<-"Company C"
data1[data1=="Reaktor"]<-"Company D"
# data2 <- subset(data1, condexp %in% c("Never", "Rarely", "Occasionally", "Yes, actively"))
data1$condexp = factor(data1$condexp, levels=c("Never", "Rarely", "Occasionally", "Yes, actively"))
mosaic( ROLE ~ condexp, data = data1, rot_labels=c(33,0,0,0), highlighting_fill = subs_pal[3:6], labeling_args = list(set_varnames = c(condexp=" ", COMPANY=""), just_labels = c("left",
"center",
"center",
"right"), offset_labels = c(-0.72, 0, 0, 0))
)
data1 <- data
data1 <- data.frame(data1)
data1[data1=="Ericsson"]<-"Company A"
data1[data1=="F-secure"]<-"Company B"
data1[data1=="Vaadin"]<-"Company C"
data1[data1=="Reaktor"]<-"Company D"
# data2 <- subset(data1, condexp %in% c("Never", "Rarely", "Occasionally", "Yes, actively"))
data1$condexp = factor(data1$condexp, levels=c("Never", "Rarely", "Occasionally", "Yes, actively"))
mosaic( condexp ~ ROLE, data = data1, rot_labels=c(33,0,0,0), highlighting_fill = subs_pal[3:6], labeling_args = list(set_varnames = c(condexp=" ", COMPANY=""), just_labels = c("left",
"center",
"center",
"right"), offset_labels = c(-0.72, 0, 0, 0))
)
data1 <- data
data1 <- data.frame(data1)
data1[data1=="Ericsson"]<-"Company A"
data1[data1=="F-secure"]<-"Company B"
data1[data1=="Vaadin"]<-"Company C"
data1[data1=="Reaktor"]<-"Company D"
# data2 <- subset(data1, condexp %in% c("Never", "Rarely", "Occasionally", "Yes, actively"))
data1$condexp = factor(data1$condexp, levels=c("Never", "Rarely", "Occasionally", "Yes, actively"))
data2 <- subset(data1, ROLE %in% c("Developer", "Manager", "UX designer"))
mosaic( condexp ~ ROLE, data = data2, rot_labels=c(33,0,0,0), highlighting_fill = subs_pal[3:6], labeling_args = list(set_varnames = c(condexp=" ", COMPANY=""), just_labels = c("left",
"center",
"center",
"right"), offset_labels = c(-0.72, 0, 0, 0))
)
data1 <- data
data1 <- data.frame(data1)
data1[data1=="Ericsson"]<-"Company A"
data1[data1=="F-secure"]<-"Company B"
data1[data1=="Vaadin"]<-"Company C"
data1[data1=="Reaktor"]<-"Company D"
# data2 <- subset(data1, condexp %in% c("Never", "Rarely", "Occasionally", "Yes, actively"))
data1$condexp = factor(data1$condexp, levels=c("Never", "Rarely", "Occasionally", "Yes, actively"))
data2 <- subset(data1, ROLE %in% c("Developer", "Manager", "UX designer"))
mosaic( condexp ~ ROLE, data = data2, rot_labels=c(33,0,0,0), highlighting_fill = subs_pal[3:6], labeling_args = list(set_varnames = c(condexp=" ", ROLE=""), just_labels = c("left",
"center",
"center",
"right"), offset_labels = c(-0.72, 0, 0, 0))
)
summary(topRules)
inspect(rules[1:15])
getwd()
